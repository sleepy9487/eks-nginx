name: Deploy to EKS
on:
  workflow_dispatch:
    branches:
      - main  
jobs:
  deploy:
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.5
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Apply
      run: terraform apply -auto-approve
    
    - name: Configure kubectl for EKS
      run: |
        aws eks --region us-east-1 update-kubeconfig --name my-eks-cluster
    
    - name: Apply Nginx Deployment and Service
      run: |
        kubectl apply -f nginx/nginx-deployment.yaml
        kubectl apply -f nginx/nginx-service.yaml
        kubectl apply -f nginx/nginx-exporter-service.yml
        kubectl apply -f nginx/nginx-exporter.yml
    
    - name: Install and Expose Grafana
      run: |
        helm install grafana grafana/grafana \
          --namespace monitoring
        kubectl expose deployment grafana \
          --type=LoadBalancer \
          --name=grafana-service \
          --namespace=monitoring \
          --port=3000 \
          --target-port=3000
    
    - name: Update Prometheus using values.yaml
      run: |
        helm install prometheus prometheus-community/kube-prometheus-stack \
          --namespace monitoring --create-namespace \
          -f prometheus/values.yaml
    
    - name: Deploy Loki and Promtail using Helm
      run: |
        helm install loki grafana/loki-stack \
          --namespace=logging --create-namespace
    
    - name: Verify Deployments
      run: |
        kubectl get pods -n default
        kubectl get services -n default
        kubectl get pods -n monitoring
        kubectl get services -n monitoring
        kubectl get pods -n logging
        kubectl get services -n logging



